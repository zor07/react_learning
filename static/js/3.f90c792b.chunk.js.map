{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/images/default_avatar.jpg","components/Profile/ProfileInfo/ProfileStatusOnHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthProfileRedirect.js","hoc/withRouter.js"],"names":["module","exports","ProfileStatusOnHooks","props","useState","editMode","setEditMode","status","setStatus","onDoubleClick","onBlur","updateStatus","autoFocus","value","onChange","e","currentTarget","ProfileInfo","profile","Preloader","contacts","avatar","photos","large","alt","src","defaultAvatar","className","css","content","row","column","facebook","website","vk","twitter","instagram","youtube","github","mainLink","description","fullName","aboutMe","userId","Post","message","likesCount","s","item","likeBlock","MyPosts","React","memo","postElements","posts","map","post","postsBlock","NewPostReduxForm","onSubmit","values","addPost","newPostBody","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","validate","required","name","placeholder","MyPostsContainer","connect","state","profilePage","newPostText","Profile","ProfileContainer","this","params","authorizedUserId","getProfile","getStatus","Component","compose","isAuth","auth","navigate","useNavigate","useParams","useEffect","location","useLocation"],"mappings":"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","file":"static/js/3.f90c792b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2Io2G\",\"description\":\"ProfileInfo_description__2yWda\",\"column\":\"ProfileInfo_column__3f0g2\",\"row\":\"ProfileInfo_row__3FU3B\",\"avatar\":\"ProfileInfo_avatar__3xuFq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"avatar\":\"Post_avatar__1wBwP\",\"likeBlock\":\"Post_likeBlock__3FDQI\"};","export default __webpack_public_path__ + \"static/media/default_avatar.e1452621.jpg\";","import React, {useState} from \"react\";\n\nconst ProfileStatusOnHooks = (props) => {\n\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(props.status)\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            <div>\n                {!editMode &&\n                    <span onDoubleClick={activateEditMode}>{status || \"----\"}</span>\n                }\n            </div>\n            <div>\n                {editMode &&\n                <input onBlur={deactivateEditMode}\n                       autoFocus={true}\n                       value={status}\n                       onChange={onStatusChange}/>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileStatusOnHooks\n","import React from 'react';\nimport css from './ProfileInfo.module.css'\nimport Preloader from \"../../Common/Preloader/Preloader\";\nimport defaultAvatar from \"../../../assets/images/default_avatar.jpg\"\nimport ProfileStatusOnHooks from \"./ProfileStatusOnHooks\";\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n\n\n    if (!profile) {\n        return <Preloader />\n    }\n\n    const contacts = profile.contacts;\n\n    let avatar = profile.photos.large\n        ? <img alt={''} src={profile.photos.large}/>\n        : <img alt={''} src={defaultAvatar}/>\n\n    return (\n        <div className={css.content}>\n\n            <div className={css.row}>\n                <div className={css.avatar + ' ' + css.column}>\n                    {avatar}\n                </div>\n                <div className={css.column}>\n                    <h2>Contacts</h2>\n                    <ul>\n                        { contacts.facebook &&\n                            <li>Facebook: {contacts.facebook} </li>\n                        }\n                        { contacts.website &&\n                            <li>Website: {contacts.website}</li>\n                        }\n                        { contacts.vk &&\n                            <li>VK: {contacts.vk}</li>\n                        }\n                        { contacts.twitter &&\n                            <li>Twitter: {contacts.twitter}</li>\n                        }\n                        { contacts.instagram &&\n                            <li>Instagram: {contacts.instagram}</li>\n                        }\n                        { contacts.youtube &&\n                            <li>Youtube: {contacts.youtube}</li>\n                        }\n                        { contacts.github &&\n                            <li>Github: {contacts.github}</li>\n                        }\n                        { contacts.mainLink &&\n                            <li>Main Link: {contacts.mainLink}</li>\n                        }\n                    </ul>\n\n                </div>\n            </div>\n\n\n            <div className={css.description}>\n                {profile.fullName &&\n                <h2>\n                    {profile.fullName}\n                </h2>\n                }\n                {profile.aboutMe &&\n                <p>\n                    {profile.aboutMe}\n                </p>\n                }\n                <ProfileStatusOnHooks status={status}\n                               userId={profile.userId}\n                               updateStatus={updateStatus}/>\n            </div>\n        </div>\n    );\n\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css'\n\nconst Post = ({message, likesCount}) => {\n    return (\n        <div className={s.item}>\n            <div className={s.avatar}>\n                <img alt={''} src='https://intim-mall.ru/images/thumbnails/1223/1000/detailed/250/154335.jpg'/>\n                {message}\n            </div>\n\n            <div className={s.likeBlock}>\n                <img alt={''} src='https://www.digitalbizmagazine.com/wp-content/uploads/2019/04/corazon.png'/> <span>{likesCount}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../Common/FormControls/FormControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\n\n\n/*\n\nReact.memo - allows to optimize render.\n\nAlternative 1:\n\nclass MyComponent extends React.Component {\n    shouldComponentUpdate(prevProps, prevState) {\n        // render will be called if shouldComponentUpdate returns true\n        nextProps != this.props || nextState != this.state;\n    }\n    render() {\n        return <div></div>\n    }\n}\n\nAlternative 2:\n\nclass MyComponent extends React.PureComponent {\n    render() {\n        return <div></div>\n    }\n}\n\n */\n\nconst MyPosts = React.memo(props => {\n\n    let postElements = props.posts\n        .map(post => <Post message={post.message} likesCount={post.likesCount}/>)\n\n    let onSubmitNewPost = (values) => {\n        props.addPost(values.newPostBody)\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3> My Posts</h3>\n            <NewPostReduxForm onSubmit={onSubmitNewPost}/>\n            <div className={s.posts}>\n                {postElements}\n            </div>\n        </div>\n    );\n})\n\nconst maxLength10 = maxLengthCreator(10)\nconst NewPostForm = ({handleSubmit}) => {\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[required, maxLength10]}\n                       name='newPostBody'\n                       placeholder='Write your post'/>\n            </div>\n            <div>\n                <button>Add Post</button>\n            </div>\n        </form>\n    )\n}\n\nconst NewPostReduxForm = reduxForm({form: 'newPostForm'})(NewPostForm)\n\nexport default MyPosts;","import {addPost} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, {addPost}) (MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = ({profile, status, updateStatus}) => {\n\n    return <div>\n        <ProfileInfo profile={profile}\n                     status={status}\n                     updateStatus={updateStatus}/>\n        <MyPostsContainer />\n    </div>\n}\n\nexport default Profile;","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\nimport {compose} from \"redux\";\nimport {withRouter} from \"../../hoc/withRouter\";\nimport {withAuthProfileAuthRedirect} from \"../../hoc/withAuthProfileRedirect\";\n\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n        }\n\n        this.props.getProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return <Profile {...this.props} updateStatus={this.props.updateStatus} />\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText,\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId\n    }\n}\n\n\nexport default compose(\n    withAuthProfileAuthRedirect,\n    withRouter,\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus})\n)(ProfileContainer)","import React, {Component, useEffect} from \"react\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nexport const withAuthProfileAuthRedirect = (Component) => {\n    const Wrapper = (props) => {\n        const navigate = useNavigate();\n        const params = useParams();\n\n        useEffect(() => {\n            if (!props.isAuth && !params.userId) {\n                navigate(\"/login\")\n            }\n        })\n\n        return <Component {...props} />\n    }\n\n    let mstp = (state) => ({\n        isAuth: state.auth.isAuth\n    })\n\n    return  connect(mstp)(Wrapper);\n}\n\n\n","import {useLocation, useParams} from \"react-router-dom\";\n\nexport const withRouter = (Component) => {\n    const Wrapper = (props) => {\n        const location = useLocation();\n        const params = useParams();\n\n        return (\n            <Component\n                location={location}\n                params={params}\n                {...props}\n            />\n        );\n    };\n\n    return Wrapper;\n};\n"],"sourceRoot":""}