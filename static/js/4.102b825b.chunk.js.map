{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","DialogItem","id","name","className","s","dialog","activeClassName","active","to","Message","props","type","incoming","outgoing","messageBox","sender","message","maxLength30","maxLengthCreator","NewMessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","validate","required","placeholder","rows","cols","Dialogs","dialogsElements","dialogsPage","dialogs","map","messagesElements","messages","dialogItems","separatorLine","values","addMessage","newMessageBody","compose","Component","connect","state","isAuth","auth","navigate","useNavigate","useEffect"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,cAAgB,+BAA+B,SAAW,4B,oBCA5ND,EAAOC,QAAU,CAAC,WAAa,4BAA4B,SAAW,0BAA0B,SAAW,4B,6FCW5FC,EARI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACrB,OACI,qBAAKC,UAAWC,IAAEC,OAAlB,SACI,cAAC,IAAD,CAASC,gBAAiBF,IAAEG,OAAQC,GAAE,mBAAcP,GAApD,SAA2DC,O,kBCYxDO,EAhBC,SAACC,GACb,IAAIC,EAOJ,OALIA,EADe,aAAfD,EAAMC,KACCP,IAAEQ,SAEFR,IAAES,SAGN,qBAAKV,UAAWC,IAAEU,WAAlB,SACH,sBAAKX,UAAWQ,EAAhB,UACI,8BAAID,EAAMK,OAAV,OAAsB,uBACrBL,EAAMM,c,kCCqBbC,EAAcC,YAAiB,IAqB/BC,EAAsBC,YAAU,CAACC,KAAM,kBAAjBD,EAnBL,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aAErB,OACI,uBAAMC,SAAUD,EAAhB,UACI,8BACI,cAACE,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACpBf,KAAK,iBACL2B,YAAY,qBACZC,KAAM,EACNC,KAAM,QAElB,8BACI,0DAQDC,EAjDC,SAACtB,GAEb,IAAIuB,EAAkBvB,EAAMwB,YAAYC,QACnCC,KAAI,SAAA/B,GAAM,OAAI,cAAC,EAAD,CAAYH,KAAMG,EAAOH,KAAMD,GAAII,EAAOJ,QAEzDoC,EAAmB3B,EAAMwB,YAAYI,SACpCF,KAAI,SAAApB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,QAASL,KAAMK,EAAQL,KAAMI,OAAQC,EAAQD,YAM3F,OACI,sBAAKZ,UAAWC,IAAE+B,QAAlB,UACI,qBAAKhC,UAAWC,IAAEmC,YAAlB,SACKN,IAEL,qBAAK9B,UAAWC,IAAEoC,gBAClB,sBAAKrC,UAAWC,IAAEkC,SAAlB,UACKD,EACD,cAAClB,EAAD,CAAqBI,SAZX,SAACkB,GACnB/B,EAAMgC,WAAWD,EAAOE,0B,6BCNjBC,uBCRiB,SAACC,GAiB7B,OAAQC,aAJG,SAACC,GAAD,MAAY,CACnBC,OAAQD,EAAME,KAAKD,UAGfF,EAhBQ,SAACpC,GACb,IAAMwC,EAAWC,cAQjB,OANAC,qBAAU,WACD1C,EAAMsC,QACPE,EAAS,aAIV,cAACL,EAAD,eAAenC,SDA1BoC,aARkB,SAACC,GACnB,MAAO,CACHb,YAAaa,EAAMb,eAME,CAACQ,iBAFfE,CAGbZ","file":"static/js/4.102b825b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogItems\":\"Dialogs_dialogItems__3flRc\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"separatorLine\":\"Dialogs_separatorLine__1SmA4\",\"messages\":\"Dialogs_messages__1w_Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageBox\":\"Message_messageBox__3vmzr\",\"incoming\":\"Message_incoming__20idS\",\"outgoing\":\"Message_outgoing__22iDY\"};","import s from \"./../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\nconst DialogItem = ({id, name}) => {\n    return (\n        <div className={s.dialog}>\n            <NavLink activeClassName={s.active} to={`/dialogs/${id}`}>{name}</NavLink>\n        </div>\n    );\n}\n\nexport default DialogItem;","import s from \"./Message.module.css\";\nimport React from \"react\";\n\nconst Message = (props) => {\n    let type;\n    if (props.type === 'incoming') {\n        type = s.incoming\n    } else {\n        type = s.outgoing\n    }\n\n    return <div className={s.messageBox}>\n        <div className={type}>\n            <b>{props.sender}:</b><br/>\n            {props.message}\n        </div>\n    </div>\n}\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../Common/FormControls/FormControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\"\n\n\nconst Dialogs = (props) => {\n\n    let dialogsElements = props.dialogsPage.dialogs\n        .map(dialog => <DialogItem name={dialog.name} id={dialog.id}/>);\n\n    let messagesElements = props.dialogsPage.messages\n        .map(message => <Message message={message.message} type={message.type} sender={message.sender}/>);\n\n    const onSendMessage = (values) => {\n        props.addMessage(values.newMessageBody);\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.separatorLine}/>\n            <div className={s.messages}>\n                {messagesElements}\n                <NewMessageReduxForm onSubmit={onSendMessage} />\n            </div>\n        </div>\n    );\n}\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst AddMessageForm = ({handleSubmit}) => {\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[required, maxLength30]}\n                        name='newMessageBody'\n                        placeholder='Write your message'\n                        rows={5}\n                        cols={100}/>\n            </div>\n            <div>\n                <button>Send Message</button>\n            </div>\n        </form>\n    )\n}\n\nconst NewMessageReduxForm = reduxForm({form: 'newMessageForm'})(AddMessageForm)\n\nexport default Dialogs;","import {addMessage} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, {addMessage})\n)(Dialogs);","import React, {Component, useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nexport const withAuthRedirect = (Component) => {\n    const Wrapper = (props) => {\n        const navigate = useNavigate();\n\n        useEffect(() => {\n            if (!props.isAuth) {\n                navigate(\"/login\")\n            }\n        })\n\n        return <Component {...props} />\n    }\n\n    let mstp = (state) => ({\n        isAuth: state.auth.isAuth\n    })\n\n    return  connect(mstp)(Wrapper);\n}\n\n\n"],"sourceRoot":""}