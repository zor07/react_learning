{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/images/default_avatar.jpg","components/Profile/ProfileInfo/ProfileStatusOnHooks.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthProfileRedirect.js","hoc/withRouter.js"],"names":["module","exports","ProfileStatusOnHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","css","onDoubleClick","isOwner","onBlur","updateStatus","autoFocus","value","onChange","e","currentTarget","Contact","title","contact","profileDataItem","ProfileData","profile","goToEditMode","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","editSaveButton","onClick","maxLength50","maxLengthCreator","Field","component","Input","name","validate","placeholder","reduxForm","form","handleSubmit","error","onSubmit","type","Textarea","formCss","formCommonError","ProfileFullName","fullName","ProfileInfo","savePhoto","saveProfileData","Preloader","content","row","avatar","column","alt","src","photos","large","defaultAvatar","target","files","length","initialValues","profileFormData","then","Post","message","likesCount","s","item","likeBlock","MyPosts","React","memo","postElements","posts","post","postsBlock","NewPostReduxForm","values","addPost","newPostBody","maxLength10","required","MyPostsContainer","connect","state","profilePage","newPostText","Profile","ProfileContainer","userId","this","getProfile","getStatus","params","authorizedUserId","getUserId","updateProfile","prevProps","prevState","snapshot","prevUserId","Component","compose","isAuth","auth","navigate","useNavigate","useParams","location","useLocation"],"mappings":"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","file":"static/js/3.fc200880.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2Io2G\",\"contact\":\"ProfileInfo_contact__1N3gp\",\"profileDataItem\":\"ProfileInfo_profileDataItem__3x0Tk\",\"status\":\"ProfileInfo_status__2G3BZ\",\"editSaveButton\":\"ProfileInfo_editSaveButton__mRSIN\",\"column\":\"ProfileInfo_column__3f0g2\",\"row\":\"ProfileInfo_row__3FU3B\",\"avatar\":\"ProfileInfo_avatar__3xuFq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"avatar\":\"Post_avatar__1wBwP\",\"likeBlock\":\"Post_likeBlock__3FDQI\"};","export default __webpack_public_path__ + \"static/media/default_avatar.e1452621.jpg\";","import React, {useEffect, useState} from \"react\";\nimport css from './ProfileInfo.module.css'\n\nconst ProfileStatusOnHooks = (props) => {\n\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(props.status)\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        if (props.isOwner) {\n            setEditMode(true)\n        }\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div className={css.status}>\n            <div>\n                {!editMode &&\n                   <> <b>Status: </b> <span onDoubleClick={activateEditMode}>{status || \"----\"}</span> </>\n                }\n            </div>\n            <div>\n                {editMode &&\n                <> <b>Status: </b> <input onBlur={deactivateEditMode}\n                       autoFocus={true}\n                       value={status}\n                       onChange={onStatusChange}/> </>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileStatusOnHooks\n","import css from \"./ProfileInfo.module.css\";\nimport React from \"react\";\n\nconst ProfileData = ({profile, goToEditMode, isOwner}) => {\n    return (\n        <div>\n            <div className={css.profileDataItem}>\n                <b>Looking for a job: </b>{profile.lookingForAJob ? \"Yes\" : \"No\"}\n            </div>\n            <div className={css.profileDataItem}>\n                <b>My skills: </b> {profile.lookingForAJobDescription}\n            </div>\n            <div className={css.profileDataItem}>\n                <b>About me: </b> {profile.aboutMe}\n            </div>\n\n            <div className={css.profileDataItem}>\n                <b>Contacts:</b>\n                {\n                    Object.keys(profile.contacts).map(key => {\n                        return <Contact key={key} title={key} value={profile.contacts[key]}/>\n                    })\n                }\n            </div>\n            {isOwner &&\n            <div className={css.editSaveButton}>\n                <button onClick={goToEditMode}>Edit</button>\n            </div>\n            }\n        </div>\n    )\n}\n\nconst Contact = ({title, value}) => {\n    if (!value) return ''\n    return  <div className={`${css.contact} ${css.profileDataItem}`}>\n        <b>{title}: </b> {value}\n    </div>\n\n}\n\nexport default ProfileData\n","import React from \"react\";\nimport css from \"./ProfileInfo.module.css\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input, Textarea} from \"../../Common/FormControls/FormControls\";\nimport {maxLengthCreator} from \"../../../utils/validators/validators\";\nimport formCss from \"../../Common/FormControls/FormControls.module.css\";\n\n\nconst maxLength50 = maxLengthCreator(50)\n\nconst ProfileDataForm = ({profile, handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className={css.profileDataItem}>\n                <b>Full name: </b>\n                <Field component={Input}\n                       name={'fullName'}\n                       placeholder='Full name'\n                       validate={[maxLength50]}/>\n            </div>\n            <div className={css.profileDataItem}>\n                <b>Looking for a job: </b>\n                <Field component={Input}\n                       name={'lookingForAJob'}\n                       type='checkbox'/>\n            </div>\n            <div className={css.profileDataItem}>\n                <b>My skills: </b>\n                <Field component={Textarea}\n                       placeholder='My skills'\n                       validate={[maxLength50]}\n                       name={'lookingForAJobDescription'}/>\n            </div>\n            <div className={css.profileDataItem}>\n                <b>About Me: </b>\n                <Field component={Textarea}\n                       placeholder='About me'\n                       validate={[maxLength50]}\n                       name={'aboutMe'}/>\n            </div>\n\n            <div>\n                <b>Contacts:</b>\n                {\n                    Object.keys(profile.contacts).map(key => {\n                        return <Contact key={key} title={key} value={profile.contacts[key]}/>\n                    })\n                }\n            </div>\n            { error &&\n            <div className={formCss.formCommonError}>\n                {error}\n            </div>\n            }\n            <div className={css.editSaveButton}>\n                <button type={'submit'}>Save</button>\n            </div>\n        </form>\n    )\n}\n\nconst Contact = ({title}) => {\n    return <div className={`${css.contact} ${css.profileDataItem}`}>\n        {title}:\n        <Field component={Input}\n               name={`contacts.${title}`}\n               validate={[maxLength50]}\n               placeholder={title} />\n    </div>\n}\n\nexport default reduxForm({form: 'edit-profile'})(ProfileDataForm)\n\n","import React, {useState} from 'react';\nimport css from './ProfileInfo.module.css'\nimport Preloader from \"../../Common/Preloader/Preloader\";\nimport defaultAvatar from \"../../../assets/images/default_avatar.jpg\"\nimport ProfileStatusOnHooks from \"./ProfileStatusOnHooks\";\nimport ProfileData from \"./ProfileData\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfileData}) => {\n\n    const [editMode, setEditMode] = useState(false)\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length > 0) {\n            savePhoto(e.target.files[0])\n        }\n    }\n\n    const goToEditMode = () => {\n        setEditMode(true)\n    }\n\n    const onSubmitProfileDataForm = (profileFormData) => {\n        debugger\n        saveProfileData(profileFormData)\n            .then(() => {\n                setEditMode(false)\n            })\n    }\n\n    return (\n        <div className={css.content}>\n            <ProfileFullName fullName={profile.fullName}/>\n            <ProfileStatusOnHooks status={status}\n                                  isOwner={isOwner}\n                                  updateStatus={updateStatus}/>\n\n            <div className={css.row}>\n                <div className={css.avatar + ' ' + css.column}>\n                    <img alt={''} src={profile.photos.large || defaultAvatar}/>\n                    <div>\n                        {isOwner &&\n                        <input type=\"file\" onChange={onMainPhotoSelected}/>\n\n                        }\n                    </div>\n                </div>\n                <div className={css.column}>\n                    {\n                        editMode\n                            ? <ProfileDataForm initialValues={profile}\n                                               onSubmit={onSubmitProfileDataForm}\n                                               profile={profile} />\n                            : <ProfileData profile={profile}\n                                           goToEditMode={goToEditMode}\n                                           isOwner={isOwner}/>\n                    }\n\n\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport const ProfileFullName = ({fullName}) => {\n    return <div>\n        <h2>\n            {fullName}\n        </h2>\n    </div>\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css'\n\nconst Post = ({message, likesCount}) => {\n    return (\n        <div className={s.item}>\n            <div className={s.avatar}>\n                <img alt={''} src='https://intim-mall.ru/images/thumbnails/1223/1000/detailed/250/154335.jpg'/>\n                {message}\n            </div>\n\n            <div className={s.likeBlock}>\n                <img alt={''} src='https://www.digitalbizmagazine.com/wp-content/uploads/2019/04/corazon.png'/> <span>{likesCount}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../Common/FormControls/FormControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\n\n\n/*\n\nReact.memo - allows to optimize render.\n\nAlternative 1:\n\nclass MyComponent extends React.Component {\n    shouldComponentUpdate(prevProps, prevState) {\n        // render will be called if shouldComponentUpdate returns true\n        nextProps != this.props || nextState != this.state;\n    }\n    render() {\n        return <div></div>\n    }\n}\n\nAlternative 2:\n\nclass MyComponent extends React.PureComponent {\n    render() {\n        return <div></div>\n    }\n}\n\n */\n\nconst MyPosts = React.memo(props => {\n\n    let postElements = props.posts\n        .map(post => <Post message={post.message} likesCount={post.likesCount}/>)\n\n    let onSubmitNewPost = (values) => {\n        props.addPost(values.newPostBody)\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3> My Posts</h3>\n            <NewPostReduxForm onSubmit={onSubmitNewPost}/>\n            <div className={s.posts}>\n                {postElements}\n            </div>\n        </div>\n    );\n})\n\nconst maxLength10 = maxLengthCreator(10)\nconst NewPostForm = ({handleSubmit}) => {\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[required, maxLength10]}\n                       name='newPostBody'\n                       placeholder='Write your post'/>\n            </div>\n            <div>\n                <button>Add Post</button>\n            </div>\n        </form>\n    )\n}\n\nconst NewPostReduxForm = reduxForm({form: 'newPostForm'})(NewPostForm)\n\nexport default MyPosts;","import {addPost} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, {addPost}) (MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = ({profile, status, updateStatus, isOwner, savePhoto, saveProfileData}) => {\n\n    return <div>\n        <ProfileInfo profile={profile}\n                     status={status}\n                     isOwner={isOwner}\n                     savePhoto={savePhoto}\n                     saveProfileData={saveProfileData}\n                     updateStatus={updateStatus}/>\n        <MyPostsContainer />\n    </div>\n}\n\nexport default Profile;","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getProfile, getStatus, updateStatus, savePhoto, saveProfileData} from \"../../redux/profile-reducer\";\nimport {compose} from \"redux\";\nimport {withRouter} from \"../../hoc/withRouter\";\nimport {withAuthProfileAuthRedirect} from \"../../hoc/withAuthProfileRedirect\";\n\n\nclass ProfileContainer extends React.Component {\n\n    updateProfile(userId) {\n        this.props.getProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    getUserId(props) {\n        let userId = props.params.userId;\n        if (!userId) {\n            userId = props.authorizedUserId;\n        }\n        return userId\n    }\n\n    componentDidMount() {\n        let userId = this.getUserId(this.props)\n        this.updateProfile(userId)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const prevUserId = this.getUserId(prevProps)\n        const userId = this.getUserId(this.props)\n        if (prevUserId !== userId) {\n            this.updateProfile(userId)\n        }\n    }\n\n    render() {\n        return <Profile {...this.props}\n                        updateStatus={this.props.updateStatus}\n                        isOwner={!this.props.params.userId}/>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText,\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId\n    }\n}\n\n\nexport default compose(\n    withAuthProfileAuthRedirect,\n    withRouter,\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfileData})\n)(ProfileContainer)","import React, {Component, useEffect} from \"react\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nexport const withAuthProfileAuthRedirect = (Component) => {\n    const Wrapper = (props) => {\n        const navigate = useNavigate();\n        const params = useParams();\n\n        useEffect(() => {\n            if (!props.isAuth && !params.userId) {\n                navigate(\"/login\")\n            }\n        })\n\n        return <Component {...props} />\n    }\n\n    let mstp = (state) => ({\n        isAuth: state.auth.isAuth\n    })\n\n    return  connect(mstp)(Wrapper);\n}\n\n\n","import {useLocation, useParams} from \"react-router-dom\";\n\nexport const withRouter = (Component) => {\n    const Wrapper = (props) => {\n        const location = useLocation();\n        const params = useParams();\n\n        return (\n            <Component\n                location={location}\n                params={params}\n                {...props}\n            />\n        );\n    };\n\n    return Wrapper;\n};\n"],"sourceRoot":""}